.cpu cortex-m0
.thumb
.syntax unified
.fpu softvfp

.data
.balign 4
// Your global variables go here
.global arr
arr: .word 11, 22, 24, 14, 20, 21, 15, 19, 8, 22, 15, 8, 8, 10, 9, 23
.global str
str: .asciz "Frperg 01234 Zrffntr 56789! Rapbqrq Urer..."


.text
.global intsub
intsub:
    // Your code for intsub goes here
    PUSH {R4-R7, LR}
	movs r0, #0 //i
	ldr r1, =arr //arr
	movs r2, #0 //value
for:
	movs r3, #4
	ands r3, r2
	cmp r3, #4
if:
	ldrb r4, [r1, r0] //r4 = arr[i]
	adds r0, #4 //i = i + 1
	ldrb r5, [r1, r0] //r5 = arr[i + 1]
	subs r0, #4 //i = i - 1 (return back to regular i)
	adds r2, r4 //value += arr[i]
	adds r2, r4 //value += arr[i + 1]
	b endif
else:
	ldrb r4, [r1, r0]
	ldrb r5, [r1, r0] //r5 = arr[i + 1]
	lsls r3, r4, #2
	adds r2, r3

	b endif
endif:
	subs r3, r4, r5 //r3 = arr[i] - arr[i = 1]
	strb r3, [r1, r0]
	adds r0, #1
	cmp r0, #15
	blt for

    // You must terminate your subroutine with bx lr
    // unless you know how to use PUSH and POP.
    POP {R4-R7, PC}



.global charsub
charsub:
    // Your code for charsub goes here

    // You must terminate your subroutine with bx lr
    // unless you know how to use PUSH and POP.
    bx lr


.global login
login: .string "dpenebac" // Make sure you put your login here.
.balign 2
.global main
main:
    //bl autotest // uncomment AFTER you debug your subroutines
    bl intsub
    bl charsub
    bkpt
